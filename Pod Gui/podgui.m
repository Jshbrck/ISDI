function varargout = podgui(varargin)

%
% Author: 
%   Miles R.
%
% Usage: 
%   podgui  - function that creates gui & components
%   varargout - represents any number of output arguments
%   varargin  - represents any number of input arguments
% 
% Description:
%   Creates a figure & its components programmatically. Everything is
%   commented extensively for easier reference.
% 

% [fig] - add initial figure
fig = figure(...
    'Tag',             'fig',...
    'Name',            'Prototype Creator',...
    'NumberTitle',     'off',...
    'Visible',         'on',... 'MenuBar',         'none',...
    'Units',           'normalized',...
    'UserData',        struct('vectCount',0),... % use for indexing the vectors
    'Position',        [.1 .1 .5 .6]); % may only need for resizing text



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Add Toolbar & Push Buttons                                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%F%%%%%%%%%%%%%%%%%%%%%%%%%%

% add toolbar
tb = uitoolbar('Parent',fig);

% get open icon png & convert to use in toolbar
[img_open,~,alpha] = imread(fullfile(matlabroot,...
    'toolbox/matlab/icons/file_open.png'));
openIcon = double(img_open)/256/256;
openIcon(~alpha) = NaN;

% get pan icon png & convert to use in toolbar
[img_save,~,alpha] = imread(fullfile(matlabroot,...
    'toolbox/matlab/icons/tool_hand.png'));
panIcon = double(img_save)/256/256;
panIcon(~alpha) = NaN;

% get zoom in icon png & convert to use in toolbar
[img_save,~,alpha] = imread(fullfile(matlabroot,...
    'toolbox/matlab/icons/tool_zoom_in.png'));
zoomInIcon = double(img_save)/256/256;
zoomInIcon(~alpha) = NaN;

% get zoom in icon png & convert to use in toolbar
[img_save,~,alpha] = imread(fullfile(matlabroot,...
    'toolbox/matlab/icons/tool_zoom_out.png'));
zoomOutIcon = double(img_save)/256/256;
zoomOutIcon(~alpha) = NaN;

% % get brush in icon png & convert to use in toolbar
% [img_save,~,alpha] = imread(fullfile(matlabroot,...
%     'toolbox/matlab/icons/tool_data_brush.png'));
% brushIcon = double(img_save)/256/256;
% brushIcon(~alpha) = NaN;


% [openBtn] - open button
uipushtool(...
    'Parent',          tb,...
    'Tag',             'openBtn',...
    'CData',           openIcon,...
    'TooltipString',   'Open File',...
    'ClickedCallback', @openBtnCallback);

% [panBtn] - pan button
uipushtool(...
    'Parent',          tb,...
    'Tag',             'panBtn',...
    'CData',           panIcon,...
    'TooltipString',   'pan tool',...
    'ClickedCallback', 'pan');

% [zoomInBtn] - zoom in button
uipushtool(...
    'Parent',          tb,...
    'Tag',             'zoomInBtn',...
    'CData',           zoomInIcon,...
    'TooltipString',   'zoom in tool',...
    'ClickedCallback', 'zoom');

% [zoomOutBtn] - zoom out button (just resets zoom settings)
uipushtool(...
    'Parent',          tb,...
    'Tag',             'zoomOutBtn',...
    'CData',           zoomOutIcon,...
    'TooltipString',   'zoom out to initial zoom setting',...
    'ClickedCallback', 'zoom out');

% % [brushBtn] - zoom out button (just resets zoom settings)
% uipushtool(...
%     'Parent',          tb,...
%     'Tag',             'brushBtn',...
%     'CData',           brushIcon,...
%     'TooltipString',   'brush brush brush',...
%     'ClickedCallback', @brushPushCallback);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Add Tabs & their corresponding panels                        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% create tab group
tgroup = uitabgroup('Parent',fig);

%%% Tabs %%%

% [tab1] - third tab for general information
tab1 = uitab(...
    'Parent',          tgroup,...
    'Tag',             'tab1',...
    'Title',           'Infant Info');

% [tab2] - first tab for params & plot
tab2 = uitab(...
    'Parent',          tgroup,...
    'Tag',             'tab2',...
    'Title',           'Choose Intervals');

% [tab3] - second tab for data
tab3 = uitab(...
    'Parent',          tgroup,...
    'Tag',             'tab3',...
    'Title',           'Vars & POD');

% [tab4] - third tab for data
tab4 = uitab(...
    'Parent',          tgroup,...
    'Tag',             'tab4',...
    'Title',           'Phis');

%%% Tab Panels %%%

% [tab1pan] - tab 1 panel for general information
tab1Pan = uipanel(...
    'Parent',          tab1,...
    'Tag',             'tab1Pan',...
    'Title',           'General Information',...
    'FontSize',        14,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.05 .25 .3 .7]);

% [tab2Pan] - tab 2 panel to contain parameters
tab2Pan = uipanel(...
    'Parent',          tab2,...
    'Tag',             'tab2Pan',...
    'Title',           'Intervals',...
    'FontSize',        14,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.05 .05 .9 .3]);

% [tab3Pan] - tab 3 panel for something (maybe)
tab3Pan = uipanel(...
    'Parent',          tab3,...
    'Tag',             'tab3Pan',...
    'Title',           'Vectors',...
    'FontSize',        14,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.05 .05 .9 .9]);

% [tab4Pan] - tab 4 panel for something (maybe)
tab4Pan = uipanel(...
    'Parent',          tab4,...
    'Tag',             'tab4Pan',...
    'Title',           'Phis',...
    'FontSize',        14,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.05 .05 .9 .9]);

% [tab4Pan2] - tab 4 panel for something (maybe)
tab4Pan2 = uipanel(...
    'Parent',          tab4Pan,...
    'Tag',             'tab4Pan2',...
    'Title',           'POD Params',...
    'FontSize',        12,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.2 .2 .25 .775]);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Tab 1 Components                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% Text Labels

% [Gender] - gender label
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'genderTxt',...
    'Style',           'text',...
    'String',          'Gender :',...
    'FontSize',        10,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.09 .75 .31 .05]);

% [Age] - age label
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'ageTxt',...
    'Style',           'text',...
    'String',          'Age :',...
    'FontSize',        10,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.1 .6 .3 .05]);

% [feedType] - feedType label
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'feedTypeTxt',...
    'Style',           'text',...
    'String',          'Feed Type :',...
    'FontSize',        10,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.075 .45 .325 .05]);

% [gestationalAge] - gestational age label
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'gestationalAgeTxt',...
    'Style',           'text',...
    'String',          'Gestational Age :',...
    'FontSize',        10,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.1 .3 .3 .1]);

% [notes] - notes label
uicontrol(...
    'Parent',          tab1,...
    'Tag',             'notesTxt',...
    'Style',           'text',...
    'String',          'Notes :',...
    'FontSize',        16,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.55 .93 .15 .05]);

%%% Edit Text

% [genderEditTxt] - gender edit text
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'genderEditTxt',...
    'Style',           'edit',...
    'String',          'M/F',...      % initial value
    'Units',           'normalized',...
    'Position',        [.45 .75 .25 .05]);

% [ageEditTxt] - age edit text
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'ageEditTxt',...
    'Style',           'edit',...
    'String',          '0',...      % initial value
    'Units',           'normalized',...
    'Position',        [.45 .6 .25 .05]);

% [feedTypeEditTxt] - feed type edit text
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'feedTypeEditTxt',...
    'Style',           'edit',...
    'String',          'Breast/Bottle',...      % initial value
    'Units',           'normalized',...
    'Position',        [.45 .45 .25 .05]);

% [gestationalAgeEditTxt] - gestational age edit text
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'gestationalAgeEditTxt',...
    'Style',           'edit',...
    'String',          '0',...      % initial value
    'Units',           'normalized',...
    'Position',        [.45 .3 .25 .05]);

% [notesEditTxt] - notes edit text
uicontrol(...
    'Parent',               tab1,...
    'Tag',                  'notesEditTxt',...
    'Style',                'edit',...
    'String',               'enter notes here',...      % initial value
    'Units',                'normalized',...
    'Max',                  2,...    %Allows typing to several lines
    'HorizontalAlignment',  'left',...
    'Position',             [.4 .25 .55 .68]);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Tab 2 Components                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% Buttons

% [addBtn] - add vars to table button
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'addBtn',...
    'Style',           'pushbutton',...
    'String',          'Append',...
    'FontSize',        12,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.3 .125 .4 .3],...
    'UserData',        {},...
    'Callback',        @addBtnCallback);

%%% Text Labels

% [winSizeTxt] - 'to' text label
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'winSizeTxt',...
    'Style',           'text',...
    'String',          'window size :',...
    'FontSize',        12,...
    'HorizontalAlignment', 'center',...
    'Units',           'normalized',...
    'Position',        [.3 .7 .15 .2]);

% [startTxt] - start of interval text label
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'startTxt',...
    'Style',           'text',...
    'String',          'start index :',...
    'FontSize',        12,...
    'HorizontalAlignment', 'center',...
    'Units',           'normalized',...
    'Position',        [.55 .7 .15 .2]);

%%% Edit Text

% [winSizeEditTxt] - size of intervals edit text
winSizeEditTxt = uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'winSizeEditTxt',...
    'Style',           'edit',...
    'String',          '50',...      % initial value
    'Units',           'normalized',...
    'Position',        [.3 .45 .15 .2]);

% [startEditTxt] - start of interval edit text
startEditTxt = uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'startEditTxt',...
    'Style',           'edit',...
    'String',          '1',...      % initial value
    'Units',           'normalized',...
    'Position',        [.55 .45 .15 .2]);

align([winSizeEditTxt,startEditTxt],'Distribute','bottom')

%%% Plot (note: the axes is a child of tab2 NOT tab2Pan)

% [axes] - add axes for plot
axes(...
    'Parent',          tab2,...
    'Tag',             'axes',...
    'NextPlot',        'replacechildren',...
    'Units',           'normalized',...
    'Position',        [.125 .4 .75 .55]);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% tab 3 Components                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% Table

% define/format column headers
varTblHeaders = {... % is font size relative in this context?
    '<html><center><font size=+1><b>check<br />&nbsp;',...
    '<html><center><font size=+1><b>name<br />&nbsp;',...
    '<html><center><font size=+1><b>start<br />&nbsp;',...
    '<html><center><font size=+1><b>end<br />&nbsp;'
};

% [varTbl] - variable table
varTbl = uitable(...
    'Parent',          tab3Pan,...
    'Tag',             'varTbl',...
    'Data',            {},...
    'RowName',         {},...
    'ColumnName',      varTblHeaders,...'FontSize',        10,...
    'ColumnFormat',    {'logical','bank','numeric','numeric'},...
    'ColumnEditable',  [true false false false],...
    'Units',           'normalized',...
    'Position',        [.05 .25 .36 .7],...
    'CellEditCallback',@cellEditCallback,...
    'CellSelectionCallback', @cellSelectCallback1);

%%% Buttons

% [loadVarBtn] - load vars button (load a matfile to the table)
uicontrol(...
    'Parent',          tab3Pan,...
    'Tag',             'loadVarBtn',...
    'Style',           'pushbutton',...
    'String',          'Load *.mat',...
    'FontSize',        12,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.05 .05 .3 .1],...
    'Callback',        @loadVarBtnCallback);

% [varSaveBtn] - save vars button (exports stuff to *.mat)
uicontrol(...
    'Parent',          tab3Pan,...
    'Tag',             'varSaveBtn',...
    'Style',           'pushbutton',...
    'String',          'Save as *.mat',...
    'FontSize',        12,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.35 .05 .3 .1],...
    'Callback',        @varSaveBtnCallback);

%%% Axes

% [axes2] - add axes for plot
axes(...
    'Parent',          tab3Pan,...
    'Tag',             'axes2',...
    'NextPlot',        'replacechildren',...
    'Units',           'normalized',...
    'Position',        [.45 .25 .5 .7]);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% tab 4 Components                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% Table

% [eigTbl] - variable table
uitable(...
    'Parent',          tab4Pan,...
    'Tag',             'eigTbl',...
    'Data',            {},...
    'RowName',         {},...
    'ColumnName',      {'<html><center><b>Eigenvalues<br />&nbsp;'},...
    'Units',           'normalized',...
    'Position',        [.05 .2 .105 .75],...
    'CellSelectionCallback', @cellSelectCallback2);

%%% Buttons

% [podBtn] - pod button
uicontrol(...
    'Parent',          tab4Pan2,...
    'Tag',             'podBtn',...
    'Style',           'pushbutton',...
    'String',          'POD Stuff',...
    'FontSize',        10,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.1 .15 .8 .15],...
    'Callback',        @podBtnCallback);

% [eigBtn] - pod button
uicontrol(...
    'Parent',          tab4Pan,...
    'Tag',             'eigBtn',...
    'Style',           'pushbutton',...
    'String',          'Generate Eigenvalues',...
    'FontSize',        12,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.05 .05 .4 .1],...
    'Callback',        @eigBtnCallback);

%%% Text Labels(Checkboxes, really)

% [cutoffCheckTxt] - 'cutoff' text label
uicontrol(...
    'Parent',          tab4Pan2,...
    'Tag',             'cutoffCheckTxt',...
    'Style',           'checkbox',...
    'String',          'Automatic Cutoff :',...
    'Value',           true,...
    'FontSize',        10,...
    'HorizontalAlignment', 'center',...
    'Units',           'normalized',...
    'Position',        [.1 .8 .8 .1],...
    'Callback',        @cutoffCheckCallback);

% [vectNumCheckTxt] - '# of vectors' text label
uicontrol(...
    'Parent',          tab4Pan2,...
    'Tag',             'vectNumCheckTxt',...
    'Style',           'checkbox',...
    'String',          'Manual Cutoff :',...
    'FontSize',        10,...
    'HorizontalAlignment', 'center',...
    'Units',           'normalized',...
    'Position',        [.1 .55 .8 .1],...
    'Callback',        @vectNumCheckCallback);

%%% Edit Text

% [cutoffEditTxt] - cutoff edit text
uicontrol(...
    'Parent',          tab4Pan2,...
    'Tag',             'cutoffEditTxt',...
    'Style',           'edit',...
    'String',          '0.9',...      % initial value
    'Units',           'normalized',...
    'Position',        [.1 .7 .8 .1]);

% [vectNumEditTxt] - "# of eigenvectors" edit text
uicontrol(...
    'Parent',          tab4Pan2,...
    'Tag',             'vectNumEditTxt',...
    'Style',           'edit',...
    'String',          '3',...      % initial value
    'Enable',          'off',...
    'Units',           'normalized',...
    'Position',        [.1 .45 .8 .1]);

%%% Axes

% [axes3] - add axes for plot
axes(...
    'Parent',          tab4Pan,...
    'Tag',             'axes3',...
    'NextPlot',        'replacechildren',...
    'Units',           'normalized',...
    'Position',        [.5 .1 .45 .85]);


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Callbacks                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% Table Callbacks
    
function cellEditCallback(hObject,callbackdata)
    % get all handles
    handles = guihandles;
    
    % get index of bool value being changed
    index = callbackdata.Indices(1);
    
    % get the add button's UserData
    varData = handles.addBtn.UserData;
    
    % change the bool value at a given index
    bool = varData(index);
    varData(index) = {~bool{1}};
    
    % write back to add button's UserData
    handles.addBtn.UserData = varData;
    
function cellSelectCallback1(hObject,callbackdata)
    % extract guidata
    %data = guidata(hObject);
    % get all handles
    handles = guihandles;
    
    % get the add button's UserData
    varData = handles.addBtn.UserData;
    
    % get axes
    ax = handles.axes2;
    
    if size(callbackdata.Indices,1) ~= 0
        % get index of row being selected
        index = callbackdata.Indices(1);
        
        data = cell2mat(varData(index,5));
        %data = data{5};
        
        plot(ax,data);
    end
    
    
function cellSelectCallback2(hObject,callbackdata)
    % get all handles
    handles = guihandles;
    
    % get the add button's UserData
    %varData = handles.eigBtn.UserData;
    
    % get axes
    ax = handles.axes3;
    
    % get index of row being selected
    index = callbackdata.Indices(1);
    
    % get eigenvector at given row index
    %vectData = callbackdata.Source.Data(index,2:end);
    %vectData = handles.eigBtn.UserData(index,2:end);
    vectData = handles.eigBtn.UserData(:,index+1);
    % plot the eigenvector from the row that was clicked
    plot(ax,vectData);
    
%%% CheckBox Callbacks

function cutoffCheckCallback(hObject,callbackdata)
    % get cutoffCheckTxt value
    cutoffCheck = hObject.Value;
    
    % handles toggling of 2 checkboxes
    if cutoffCheck
        % get all handles
        handles = guihandles;
        
        % get vectNumCheckTxt value
        vectCheck = handles.vectNumCheckTxt.Value;
        
        % toggle vectNumCheckTxt value
        handles.vectNumCheckTxt.Value = ~vectCheck;
        
        % grey out vectNumEditTxt
        handles.vectNumEditTxt.Enable = 'off';
        
        % reenable cutoffEditTxt
        handles.cutoffEditTxt.Enable = 'on';
    else
        % toggle this button back on
        hObject.Value = ~cutoffCheck;
    end

function vectNumCheckCallback(hObject,callbackdata)
    % get cutoffCheckTxt value
    vectCheck = hObject.Value;
    
    % handles toggling of 2 checkboxes
    if vectCheck
        % get all handles
        handles = guihandles;
        
        % get cutoffCheckTxt value
        cutoffCheck = handles.cutoffCheckTxt.Value;
        
        % toggle cutoffCheckTxt value
        handles.cutoffCheckTxt.Value = ~cutoffCheck;
        
        % grey out cutoffEditTxt
        handles.cutoffEditTxt.Enable = 'off';
        
        % reenable vectNumEditTxt
        handles.vectNumEditTxt.Enable = 'on';
    else
        % toggle this button back on
        hObject.Value = ~vectCheck;
    end
    
%%% Button Callbacks

function loadVarBtnCallback(hObject,callbackdata)
    % get all handles
    handles = guihandles;
    
    % prompt user to choose *.mat to load to table
    uiopen('load');

    if exist('vectorList','var')
        % load a mat file to table (partially)
        handles.varTbl.Data = [handles.varTbl.Data; vectorList(:,1:4)];
        
        % load a mat file to add button's UserData
        handles.addBtn.UserData = [handles.addBtn.UserData; vectorList];
    end
    
    % if babyInfo is saved, load that too
    if exist('babyInfo','var')
        % set genderEditTxt
        handles.genderEditTxt.String = babyInfo{1};
        % set ageEditTxt
        handles.ageEditTxt.String = babyInfo{2};
        % set feedTypeEditTxt
        handles.feedTypeEditTxt.String = babyInfo{3};
        % set gestationalAgeEditTxt
        handles.gestationalAgeEditTxt.String = babyInfo{4};
        % set notesEditTxt
        handles.notesEditTxt.String = babyInfo{5};
    end
       
function addBtnCallback(hObject,callbackdata)
    % extract guidata
    data = guidata(hObject); % some way to not use guidata?
    % get all handles
    handles = guihandles;
    
    % get UserData of the plot
    plotData = data.UserData.plotData;
    
    % get end of interval string
    winSize = str2double(handles.winSizeEditTxt.String);
    
    % convert start edit box string to double
    strt = str2double(handles.startEditTxt.String);
    
    if strt+winSize-1 < size(plotData,1)
    % get the actual "snapshot" of the signal
        snapshot = plotData(strt:strt+winSize-1);
    else
        errordlg('end index of window exceeds end index of data');
    end
    
    % resample snapshot
    snapshot = resample(snapshot,200,size(snapshot,1));

    % increment counter for dynamic naming
    counter = handles.fig.UserData.vectCount + 1;
    userData = hObject.UserData; % this works but need to apply to varTbl
    
    % append row to cell consisting of bool, name, start, end, vector
    varData = [...
        userData;
        {...
            false,...
            sprintf('vector%d',counter),...
            strt,...
            strt+winSize,...
            snapshot...
        }];
    
    % save to UserData for later retrieval
    hObject.UserData = varData;
    
    % set counter to incremented value
    handles.fig.UserData.vectCount = counter;
    
    % write to varTbl (everything except the actual vector)
    varTblData = varData(:,1:4);
    handles.varTbl.Data = varTblData;
    
    % write changes to UserData's fields
    guidata(hObject,data);
    
function varSaveBtnCallback(hObject,callbackdata)
    % get all handles
    handles = guihandles;
    
    %%% getting stuff for vectorList
    
    % output cell array
    vectorList = {};

    % get varData from the add button's UserData field
    varData = handles.addBtn.UserData;
    
    % get first column of bools
    bools = cell2mat(varData(:,1));
    
    % loop through and add vectors that are checked to the output
    for i = 1:size(bools,1)
        if bools(i)
            vectorList = [vectorList; varData(i,:)];
        end
    end
    
    display(vectorList)
    
    %%% get baby info from tab1
    
    % get genderEditTxt
    gender = handles.genderEditTxt.String;
    % get ageEditTxt
    age = handles.ageEditTxt.String;
    % get feedTypeEditTxt
    feedType = handles.feedTypeEditTxt.String;
    % get gestationalAgeEditTxt
    gestAge = handles.gestationalAgeEditTxt.String;
    % get notesEditTxt
    notes = handles.notesEditTxt.String;
    
    % put info in a cell of strings
    babyInfo = {gender,age,feedType,gestAge,notes};
    
    display(babyInfo)
    
    % prompt user to save vectors to a *.mat
    uisave({'vectorList','babyInfo'},'vectorList');
    
function podBtnCallback(hObject,callbackdata)
    % get all handles
    handles = guihandles;
    
    % get vectorList from the add button's UserData field
    vectorList = handles.addBtn.UserData;
    
    % new list of selected vectors
    newList = {};

    % get first column of bools
    bools = cell2mat(vectorList(:,1));
    
    % loop through and add vectors that are checked to the output
    for i = 1:size(bools,1)
        if bools(i)
            newList = [newList; vectorList(i,:)];
        end
    end
    
    vects = [newList{:,5}];
    pcaReadyMatrix =[];
    for i=1:size(vects,2)
        pcaReadyMatrix = [pcaReadyMatrix,vects(:,i)];
    end
    
    
    %%%% INSERT IF HERE FOR MANUAL OR AUTOMATIC
    % get cutoffCheckTxt value
    cutoffCheck = handles.cutoffCheckTxt.Value;
    % get cutoffCheckTxt value
    vectCheck = handles.vectNumCheckTxt.Value;
    
    if cutoffCheck
        %%% use automatic method
        
        % get cutoffEditTxt value
        cutoff = str2double(handles.cutoffEditTxt.String);
    
        % create our phi with the POD_STUFF function
        prototype_phi = POD_STUFF(pcaReadyMatrix,cutoff);
        %%% QUICK FIX FOR PRESENTATION: DELETE THIS
        %prototype_phi(:,end) = -prototype_phi(:,end);
    elseif vectCheck
        %%% use manual method
        
        % get number of eigenvectors to use
        vectNum = str2double(handles.vectNumEditTxt.String);
        
        %implement here (take parts from POD_STUFF?)
        [~,eigVal]=eig(pcaReadyMatrix'*pcaReadyMatrix);
        eigVal = flip(diag(eigVal));
        B=sum(eigVal);
        A=cumsum(eigVal); 
        p= A./B;
        p1 = p(1:vectNum);
        %a= p>k;
        %DoF= length(p)-length(p1)+1;
        DoF = length(p1);
        [eigVec,eigVal]=eig(pcaReadyMatrix*pcaReadyMatrix');
        eigVal = diag(eigVal);
        eigVal = eigVal(end-DoF+1:end);
        % weighted first eigenvector & second eigenvector weighted less
        prototype_phi = eigVec (:,end-DoF+1:end).*repmat(eigVal',200,1)./sum(eigVal);
        %%% QUICK FIX FOR PRESENTATION: DELETE THIS
        %prototype_phi(:,end)= -prototype_phi(:,end);
    else
        errordlg('this shouldn"t have happened... WHAT DID YOU DO???');
    end
    
    % get phi axes
    ax = handles.axes3;
    % graph phis
    plot(ax,prototype_phi);
    title(ax,'Plot of Phis');
    
    % prompt user to save vectors to a *.mat
    uisave('prototype_phi','prototype_phi');

function eigBtnCallback(hObject,callbackdata)
    % get all handles
    handles = guihandles;
    
    % get vectorList from the add button's UserData field
    vectorList = handles.addBtn.UserData;
    
    % new list of selected vectors
    newList = {};

    % get first column of bools
    bools = cell2mat(vectorList(:,1));
    
    % loop through and add vectors that are checked to the output
    for i = 1:size(bools,1)
        if bools(i)
            newList = [newList; vectorList(i,:)];
        end
    end
    
    % getting the selected vectors from tab 3 into a matrix
    vects = [newList{:,5}];
    pcaReadyMatrix =[];
    for i=1:size(vects,2)
        pcaReadyMatrix = [pcaReadyMatrix,vects(:,i)];
    end
    
    % get the eigenvalues/eigenvectors of the selected vectors in tab 3
    %[eigVect,eigVal] = eig(pcaReadyMatrix'*pcaReadyMatrix);
    [eigVect,eigVal] = eig(pcaReadyMatrix*pcaReadyMatrix');
    
    % flip to order eigVal/eigVect in descending order
    eigVect = (flip(eigVect'))';
    %%% QUICK FIX FOR PRESENTATION: DELETE THIS
    %eigVect(:,1) = -eigVect(:,1);
    eigVal = flip(diag(eigVal));
    eigData = [eigVal eigVect]; % was diag(eigVal), need to flip?
    
    % set table's Data to column of eigenValues
    handles.eigTbl.Data = eigVal;
    
    % write eigData to eigBtn UserData
    handles.eigBtn.UserData = eigData;
    
%%% Toolbar Button Callbacks 

function openBtnCallback(hObject,callbackdata)
    %%% TO DO:
    %%%     -resample/smooth signal when opening it?

    cancel_pushed = 0;
    [txtFileName,path,cancel_in] = uigetfile(...
        {'*.txt','Text-files (*.txt)'},...
        'Select the Signal File for Analysis');

    if cancel_in == 0
        cancel_pushed = 1;
        return
    end

    % add together path & filename
    txtFileName = strcat(path,txtFileName);

    % open file
    fid = fopen(txtFileName);

    % scan file for strings
    data = textscan(fid,'%s');

    % data includes the the whole file as a string .
    % data(1,1) is 'Sensor' and data(2,1) is 'Data'
    % so we skip them convert to digit and Eliminate 'Sensor' and 'Data'
    data = data{1}(3:end);
    data = str2double(data);
    
    %%%%%%%%%  RESAMPLE/SMOOTH DATA HERE
    %data = smooth(data);
    %data = resample(data,50,250);
    data = PREPROCESS(data);
    
    % add data to plotData properties
    tmp = guidata(hObject);
    tmp.UserData.plotData = data;
    guidata(hObject,tmp);
    
    % get all handles
    handles = guihandles;
    
    % get axes
    ax = handles.axes;
    
    % plot data to axes
    plot(ax,data,... % 'LineWidth',3,...
        'DisplayName','Measurement Data');
    xlabel(ax,'Time (sec)',...
        'FontSize',14,...
        'FontName','Times New Roman');
    ylabel(ax,'Pressure (mmHg)',...
        'FontSize',14,...
        'FontName','Times New Roman');
    title(ax,'Measurement Data from Infant',...
        'FontWeight','demi',...
        'FontSize',15,...
        'FontName','Times New Roman');
