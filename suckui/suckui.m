%%% TODO :
%%%     -data cursor button in toolbar
%%%     -
%%%     -error handling
%%%     -update diagram
%%%     -when opening a file, apply PREPROCESS at this point instead of in
%%%         suckDetector
%%%     -compare big O time-complexity of old method vs new method 



function varargout = suckui(varargin)

%
% Author: 
%   Miles R.
%
% Usage: 
%   suckui  - function that creates gui & components
%   varargout - represents any number of output arguments
%   varargin  - represents any number of input arguments
% 
% Description:
%   Creates a figure & its components programmatically. Everything is
%   commented extensively for easier reference.
% 
% Note: 
%   components' parameters are formatted as two columns representing 
%   property names & property values respectively. UI components each have
%   single line comments above them with the name of their tag in brackets
%   & a brief description
% 
% Diagram of first tab:
%
%      **************** +--------------+
%      *     tab1     * |     tab2     | 
%     +****************-+--------------+-------------------------------------------------+
%     | +---tab1Pan----------------------------------+                                   |
%     | |                                            |                                   |
%     | | +-----------+ +---------------+ +-----+    | +-------------------------------+ |
%     | | |sampRateTxt| |sampRateEditTxt| |hzTxt|    | |                               | |
%     | | +-----------+ +---------------+ +-----+    | |                               | |
%     | |                                            | |                               | |
%     | | +-----------+ +---------------+            | |              axes             | |
%     | | | coeffTxt  | | coeffEditTxt  |            | |                               | |
%     | | +-----------+ +---------------+            | |                               | |
%     | |                                            | |                               | |
%     | | +-----------+ +---------------+ +--------+ | |                               | |
%     | | | cutoffTxt | | cutoffEditTxt | |mmhgTxt2| | |                               | |
%     | | +-----------+ +---------------+ +--------+ | |                               | |
%     | |                                            | |                               | |
%     | |              +--------------+              | |                               | |
%     | |              |    runBtn    |              | |                               | |
%     | |              +--------------+              | |                               | |
%     | |              +--------------+              | |                               | |
%     | |              |  addPlotBtn  |              | +-------------------------------+ |
%     | |              +--------------+              |                                   |
%     | +--------------------------------------------+                                   |
%     |                                                                                  |
%     | +------------------------------------------------------------------------------+ |
%     | |                                  resultTbl                                   | |
%     | +------------------------------------------------------------------------------+ |
%     +----------------------------------------------------------------------------------+
%
% Diagram of second tab:
%   Use your imagination. It's just one table (as of now)
%

% first define parabolic prototype to set as the default prototype
k=1;
for i=-3:6/198:3 
    b(k)=4-i*i;
    k=k+1;
end
b(199)=-5;
b(200)=-5;
prototype=b';

% [fig] - add initial figure
fig = figure(...
    'Tag',             'fig',...
    'Name',            'Infant Suck Detection Interface',...
    'NumberTitle',     'off',...
    'Visible',         'on',... 
    'MenuBar',         'none',...
    'Units',           'normalized',...
    'UserData',        struct(... % use for passing params
                            'plotData',[],...
                            'resultData',[],...
                            'perSuckData',[],...
                            'burstData',[],...
                            'curExcelFile',[],...
                            'prototype',prototype...
                       ),...
    'Position',        [.1 .1 .75 .75]);



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Add Toolbar & Push Buttons                                   %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% TODO : 
%%%     inflate the icons & or toolbar (it's too small imo)
%%%         according to the 2 seconds spent on google researching the
%%%         issue, there is no set parameter for an icon's size so will
%%%         have to go through calling java functions

% add toolbar
tb = uitoolbar('Parent',fig);

% get open icon png & convert to use in toolbar
[img_open,~,alpha] = imread(fullfile(matlabroot,...
    'toolbox/matlab/icons/file_open.png'));
openIcon = double(img_open)/256/256;
openIcon(~alpha) = NaN;

% get save icon png & convert to use in toolbar
[img_save,~,alpha] = imread(fullfile(matlabroot,...
    'toolbox/matlab/icons/file_save.png'));
saveIcon = double(img_save)/256/256;
saveIcon(~alpha) = NaN;

% get pan icon png & convert to use in toolbar
[img_save,~,alpha] = imread(fullfile(matlabroot,...
    'toolbox/matlab/icons/tool_hand.png'));
panIcon = double(img_save)/256/256;
panIcon(~alpha) = NaN;

% get zoom in icon png & convert to use in toolbar
[img_save,~,alpha] = imread(fullfile(matlabroot,...
    'toolbox/matlab/icons/tool_zoom_in.png'));
zoomInIcon = double(img_save)/256/256;
zoomInIcon(~alpha) = NaN;

% get zoom in icon png & convert to use in toolbar
[img_save,~,alpha] = imread(fullfile(matlabroot,...
    'toolbox/matlab/icons/tool_zoom_out.png'));
zoomOutIcon = double(img_save)/256/256;
zoomOutIcon(~alpha) = NaN;

% [openBtn] - open button
uipushtool(...
    'Parent',          tb,...
    'Tag',             'openBtn',...
    'CData',           openIcon,...
    'TooltipString',   'Open File',...
    'ClickedCallback', @openBtnCallback);

% [saveBtn] - save button
uipushtool(...
    'Parent',          tb,...
    'Tag',             'saveBtn',...
    'CData',           saveIcon,...
    'TooltipString',   'Save File',...
    'ClickedCallback', @saveBtnCallback);

% [panBtn] - pan button
uipushtool(...
    'Parent',          tb,...
    'Tag',             'panBtn',...
    'CData',           panIcon,...
    'TooltipString',   'pan tool',...
    'ClickedCallback', 'pan');

% [zoomInBtn] - zoom in button
uipushtool(...
    'Parent',          tb,...
    'Tag',             'zoomInBtn',...
    'CData',           zoomInIcon,...
    'TooltipString',   'zoom in tool',...
    'ClickedCallback', 'zoom');

% [zoomOutBtn] - zoom out button (just resets zoom settings)
uipushtool(...
    'Parent',          tb,...
    'Tag',             'zoomOutBtn',...
    'CData',           zoomOutIcon,...
    'TooltipString',   'zoom out to initial zoom setting',...
    'ClickedCallback', 'zoom out');



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Add Tabs & their corresponding panels                        %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% create tab group
tgroup = uitabgroup('Parent',fig);

%%% Tabs %%%

% [tab1] - third tab for general information
tab1 = uitab(...
    'Parent',          tgroup,...
    'Tag',             'tab1',...
    'Title',           'Infant Info');

% [tab2] - first tab for params & plot
tab2 = uitab(...
    'Parent',          tgroup,...
    'Tag',             'tab2',...
    'Title',           'Params');

% [tab3] - second tab for data
tab3 = uitab(...
    'Parent',          tgroup,...
    'Tag',             'tab3',...
    'Title',           'Data');

%%% Tab Panels %%%

% [tab1pan] - tab 1 panel for general information
tab1Pan = uipanel(...
    'Parent',          tab1,...
    'Tag',             'tab1Pan',...
    'Title',           'General Information',...
    'FontSize',        14,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.05 .25 .3 .7]);

% [tab2Pan] - tab 2 panel to contain parameters
tab2Pan = uipanel(...
    'Parent',          tab2,...
    'Tag',             'tab2Pan',...
    'Title',           'Parameters',...
    'FontSize',        14,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.05 .25 .3 .7]);

% [tab3Pan] - tab 3 panel for something (maybe)
tab3Pan = uipanel(...
    'Parent',          tab3,...
    'Tag',             'tab3Pan',...
    'Title',           'Data',...
    'FontSize',        14,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.05 .05 .9 .9]);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Tab 1 Components                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% Text Labels

% [Gender] - gender label
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'genderTxt',...
    'Style',           'text',...
    'String',          'Gender :',...
    'FontSize',        12,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.09 .75 .31 .05]);

% [Age] - age label
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'ageTxt',...
    'Style',           'text',...
    'String',          'Age :',...
    'FontSize',        12,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.1 .6 .3 .05]);

% [feedType] - feedType label
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'feedTypeTxt',...
    'Style',           'text',...
    'String',          'Feed Type :',...
    'FontSize',        12,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.1 .45 .3 .05]);

% [gestationalAge] - gestational age label
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'gestationalAgeTxt',...
    'Style',           'text',...
    'String',          'Gestational Age :',...
    'FontSize',        12,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.1 .3 .3 .1]);

% [notes] - notes label
uicontrol(...
    'Parent',          tab1,...
    'Tag',             'notesTxt',...
    'Style',           'text',...
    'String',          'Notes :',...
    'FontSize',        16,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.55 .93 .15 .05]);

%%% Edit Text

% [genderEditTxt] - gender edit text
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'genderEditTxt',...
    'Style',           'edit',...
    'String',          'M/F',...      % initial value
    'Units',           'normalized',...
    'Position',        [.45 .75 .25 .05]);

% [ageEditTxt] - age edit text
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'ageEditTxt',...
    'Style',           'edit',...
    'String',          '0',...      % initial value
    'Units',           'normalized',...
    'Position',        [.45 .6 .25 .05]);

% [feedTypeEditTxt] - feed type edit text
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'feedTypeEditTxt',...
    'Style',           'edit',...
    'String',          'Breast/Bottle',...      % initial value
    'Units',           'normalized',...
    'Position',        [.45 .45 .25 .05]);

% [gestationalAgeEditTxt] - gestational age edit text
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'gestationalAgeEditTxt',...
    'Style',           'edit',...
    'String',          '0',...      % initial value
    'Units',           'normalized',...
    'Position',        [.45 .3 .25 .05]);

% [notesEditTxt] - notes edit text
uicontrol(...
    'Parent',               tab1,...
    'Tag',                  'notesEditTxt',...
    'Style',                'edit',...
    'Units',                'normalized',...
    'Max',                  2,...    %Allows typing to several lines
    'HorizontalAlignment',  'left',...
    'Position',             [.4 .25 .55 .68]);

%%% Unit Text Labels

% [weeksTxt] - Weeks label (for age)
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'weeksTxt',...
    'Style',           'text',...
    'String',          'Weeks',...
    'FontSize',        10,...
    'HorizontalAlignment', 'left',...
    'Units',           'normalized',...
    'Position',        [.75 .6 .15 .05]);

% [gestWeeksTxt] - Weeks label (for gestational age)
uicontrol(...
    'Parent',          tab1Pan,...
    'Tag',             'gestWeeksTxt',...
    'Style',           'text',...
    'String',          'Weeks',...
    'FontSize',        10,...
    'HorizontalAlignment', 'left',...
    'Units',           'normalized',...
    'Position',        [.75 .3 .15 .05]);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Tab 2 Components                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% [runBtn] - run button
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'runBtn',...
    'Style',           'pushbutton',...
    'String',          'Run Analysis',...
    'FontSize',        12,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.2 .4 .6 .1],...
    'Callback',        @run_button_Callback);

% [protoBtn] - choose prototype button
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'protoBtn',...
    'Style',           'pushbutton',...
    'String',          'Choose Prototype',...
    'FontSize',        12,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.2 .25 .6 .1],...
    'Callback',        @proto_button_Callback);

% [addPlotBtn] - add plot button
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'addPlotBtn',...
    'Style',           'pushbutton',...
    'String',          'Add Plot to Excel',...
    'FontSize',        12,...
    'FontWeight',      'bold',...
    'Units',           'normalized',...
    'Position',        [.2 .1 .6 .1],...
    'Enable',          'off',...
    'Callback',        @add_plot_button_Callback);

%%% Text Labels

% [sampRateTxt] - sample rate label
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'sampRateTxt',...
    'Style',           'text',...
    'String',          'Sample Rate :',...
    'FontSize',        12,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.09 .9 .31 .05]);

% [coeffTxt] - correlation coefficient label
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'coeffTxt',...
    'Style',           'text',...
    'String',          'Correlation Coefficient :',...
    'FontSize',        12,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.1 .725 .3 .1]);

% [cutoffTxt] - cutoff pressure label
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'cutoffTxt',...
    'Style',           'text',...
    'String',          'Cutoff :',...
    'FontSize',        12,...
    'HorizontalAlignment', 'right',...
    'Units',           'normalized',...
    'Position',        [.1 .6 .3 .05]);

%%% Edit Text

% [sampRateEditTxt] - sample rate edit text
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'sampRateEditTxt',...
    'Style',           'edit',...
    'String',          '250',...      % initial value
    'Units',           'normalized',...
    'Position',        [.45 .9 .25 .05]);

% [coeffEditTxt] - correlation coefficient edit text
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'coeffEditTxt',...
    'Style',           'edit',...
    'String',          '0.8',...      % initial value
    'Units',           'normalized',...
    'Position',        [.45 .75 .25 .05]);

% [cutoffEditTxt] - cutoff pressure edit text
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'cutoffEditTxt',...
    'Style',           'edit',...
    'String',          '20',...      % initial value
    'Units',           'normalized',...
    'Position',        [.45 .6 .25 .05]);

%%% Unit Text Labels

% [hzTxt] - Hz label (for sample rate)
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'hzTxt',...
    'Style',           'text',...
    'String',          'Hz',...
    'FontSize',        10,...
    'HorizontalAlignment', 'left',...
    'Units',           'normalized',...
    'Position',        [.75 .9 .15 .05]);

% [mmhgTxt2] - mmHg label 2 (for cutoff pressure)
uicontrol(...
    'Parent',          tab2Pan,...
    'Tag',             'mmhgTxt2',...
    'Style',           'text',...
    'String',          'mmHg',...
    'FontSize',        10,...
    'HorizontalAlignment', 'left',...
    'Units',           'normalized',...
    'Position',        [.75 .6 .15 .05]);

%%% Plot (note: the axes is a child of tab2 NOT tab2Pan)

% [axes] - add axes for plot
axes(...
    'Parent',          tab2,...
    'Tag',             'axes',...
    'Units',           'normalized',...
    'Position',        [.4 .25 .55 .7]);

%%% Table (for analysis results)

% define/format column headers
resultTblHeaders = {... % is font size relative in this context?
    '<html><center><b>size of signal(s)<br />&nbsp;',...
    '<html><center><b>number of sucks<br />&nbsp;',...
    '<html><center><b>mean adjusted max pressure<br />&nbsp;',...  % the (mmHg) wont fit, what do?
    '<html><center><b>mean real max pressure<br />&nbsp;',...      % the (mmHg) wont fit, what do?
    '<html><center><b>number of bursts<br />&nbsp;',...
    '<html><center><b>mean burst duration(s)<br />&nbsp;',...
    '<html><center><b>mean pause duration(s)<br />&nbsp;',...
    '<html><center><b>mean number of sucks per burst<br />&nbsp;',...
    '<html><center><b>mean inter suck interval(s)<br />&nbsp;'...
};

% [resultTbl] - add table
resultTbl = uitable(...
    'Parent',          tab2,...
    'Tag',             'resultTbl',...
    'Data',            zeros(1,9),...
    'RowName',         {},...
    'ColumnName',      resultTblHeaders,...
    'Units',           'normalized',...
    'Position',        [.05 .025 .904 .15]);

% set width of headers to fit the length of the table
resultTbl.Units = 'pixels';
resultTbl.ColumnWidth = {925.6960/9};
resultTbl.Units = 'normalized';
resultTbl.Position(4) = resultTbl.Extent(4);
resultTbl.Position(2) = .0625;



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Tab 3 Components                                             %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% define/format column headers
dataTblHeaders = {... % is font size relative in this context?
   '<html><center><font size=+1><b>Suck#<br />&nbsp;',...
   '<html><center><font size=+1><b>T.O.O<br />&nbsp;',...
   '<html><center><font size=+1><b>Duration<br />&nbsp;',...
   '<html><center><font size=+1><b>Adjusted Pmax<br />&nbsp;',...
   '<html><center><font size=+1><b>Real Pmax<br />&nbsp;',...
   '<html><center><font size=+1><b>T of Pmax<br />&nbsp;',...
   '<html><center><font size=+1><b>I.S.I<br />&nbsp;',...
   '<html><center><font size=+1><b>A.U.C<br />&nbsp;'
};

burstTblHeaders = {... % is font size relative in this context?
   '<html><center><font size=+1><b>Burst#<br />&nbsp;',...
   '<html><center><font size=+1><b># of Sucks<br />&nbsp;',...
   '<html><center><font size=+1><b>Duration<br />&nbsp;',...
   '<html><center><font size=+1><b>I.B.I<br />&nbsp;'
};

% [dataTbl] - data table
dataTbl = uitable(...
    'Parent',          tab3Pan,...
    'Tag',             'dataTbl',...
    'Data',            zeros(1,8),...
    'RowName',         {},...
    'ColumnName',      dataTblHeaders,...'FontSize',        10,...
    'Units',           'normalized',...
    'Position',        [.05 .5 .895 .45]);

% [burstTbl] - burst table
burstTbl = uitable(...
    'Parent',          tab3Pan,...
    'Tag',             'burstTbl',...
    'Data',            zeros(1,4),...
    'RowName',         {},...
    'ColumnName',      burstTblHeaders,...'FontSize',        10,...
    'Units',           'normalized',...
    'Position',        [.05 .05 .895 .45]);

% set width of headers to fit the length of the table
dataTbl.Units = 'pixels';
dataTbl.ColumnWidth = {dataTbl.Position(3)/8};
dataTbl.Units = 'normalized';

burstTbl.Units = 'pixels';
burstTbl.ColumnWidth = {burstTbl.Position(3)/4};
burstTbl.Units = 'normalized';

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Callbacks                                                    %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%% main callbacks
    
function run_button_Callback(hObject,callbackdata)
    % extract guidata
    data = guidata(hObject);
    % get all handles
    handles = guihandles;
    
    % run only if there is something plotted
    if ~isempty(handles.fig.UserData.plotData)
        % get all enabled gui elements and disable them while running detection
        allEnabled = findobj(handles.fig,'Enable','on');
        set(allEnabled,'Enable','off');
        
        % get old string value for later
        oldVal = hObject.String;
        % change button text
        hObject.String = 'Running...';
        % force update gui otherwise elements will not change (but WHY!?)
        drawnow;
        
        % get params from edit boxes
        SR = str2double(handles.sampRateEditTxt.String);
        %baseline = str2double(handles.baselineEditTxt.String);
        ccoeff = str2double(handles.coeffEditTxt.String);
        threshold = str2double(handles.cutoffEditTxt.String);
        
        % get prototype from fig's UserData
        curFig = gcf;
        proto = curFig.UserData.prototype;
        
        % detect sucks
        [occurence,real_signal,real_SR] = suckDetector(proto,SR,ccoeff,threshold,data.UserData.plotData);
        size_real_signal = length(real_signal);
        
        % using new calculating parameters file
        [perSuck,suckStats,burstContent] = calculateParams(occurence,size_real_signal,real_SR);
        
        %If no sucks detected, end program
        if perSuck{1,1} == -1
            warndlg('No Sucks Were Detected','No Sucks')
            set(allEnabled,'Enable','on');
            hObject.String = oldVal;
            return
        end
        
        %Formatting perSuck here
        perSuck2 = perSuck;
        perSuck2(1,:)=[];
        perSuck2(:,1) = [];
        perSuck3 = cell2mat(perSuck2);
        perSuck3 = perSuck3(~all(perSuck3==0,2),:);
        content1 = cell(1,7);
        for i=1:7
            content1{1,i} = perSuck{1,i+1};
        end
        content2 = num2cell(perSuck3);
        content = [content1;content2];
        
        suck = zeros(size(perSuck3,1),1);
        sucknum= cellstr('Suck #');
        for i=1:length(suck)
            suck(i)=i;
        end
        suck = num2cell(suck);
        s = [sucknum; suck];
        content = [s,content];
        perSuck=content;
        
        % place suckStats/persuck in UserData (so it can be saved to a *.xls)
        data.UserData.resultData = suckStats;
        data.UserData.perSuckData = perSuck;
        data.UserData.burstData = burstContent;
        
        % ??? get back to this later
        a = occurence';
        a = a(~all(a==0,2),:);      %Removing all zeros
        % b is the adjusted Pmax
        b = a(:,4);
        % c is the location of the adjusted Pmax (time of Pmax)
        c = a(:,5)+a(:,1);
        
        % to show the time on x-axis
        time_index(1:size_real_signal) = (1:size_real_signal)/SR;
        
        % plot altered signal
        plot(time_index,real_signal);
        hold on; stem(c,b,':.r'); hold off;
        xlabel('Time (sec)',...
            'FontSize',14,...
            'FontName','Times New Roman');
        ylabel('Pressure (mmHg)',...
            'FontSize',14,...
            'FontName','Times New Roman');
        title('Measurement Data from Infant',...
            'FontWeight','demi',...
            'FontSize',15,...
            'FontName','Times New Roman');
        
        % write suckStats to resultTbl
        handles.resultTbl.Data = suckStats(2,:);
        
        % write perSuck to dataTbl
        handles.dataTbl.Data = perSuck(2:end,:);
        
        %write burstContent to burstTbl
        handles.burstTbl.Data = burstContent(:,:);
        
        % write changes to UserData
        guidata(hObject,data);
        
        % set button text back to what it was
        hObject.String = oldVal;
        
        % reenable all gui elements
        set(allEnabled,'Enable','on');
        set(handles.addPlotBtn,'Enable','off');
        
        %Program is finished running
        display('done')
    end
    
function proto_button_Callback(hObject,callbackdata)
    % temporarily store current directory
    oldDir = cd;
    
    % get full path of suckui.m
    thisDir = which('suckui');
    
    % get only the path to the directory suckui.m is in
    [pathstr,~,~] = fileparts(thisDir);
    display(pathstr);
    
    % change current directory to './prototypes'
    cd(strcat(pathstr,'\prototypes'));
    
    % prompt user to choose *.mat to load to table
    uiopen('load');
    
    if exist('prototype_phi','var')
        curFig = gcf;
        curFig.UserData.prototype = prototype_phi;
    end
    
    % change current directory back to what it was previously
    cd(oldDir);
    display(cd);
    
function add_plot_button_Callback(hObject,callbackdata)
    % extract guidata
    data = guidata(hObject);
    % get all handles
    handles = guihandles;
    
    % get current axes
    ax = gca;
    
    % convert units to pixels & get position
    ax.Units = 'pixels';
    pos = ax.Position;
    
    % defining the margins using tab1Pan & resultTbl's positions as reference
    % convert tab1Pan/resultTbl units to pixels
    handles.tab1Pan.Units = 'pixels';
    handles.resultTbl.Units = 'pixels';
    % get tab1Pan/resultTbl positions
    tab1PanPos = handles.tab1Pan.Position;
    resultTblPos = handles.resultTbl.Position;
    % calculate margins
    xMarg = pos(1) - tab1PanPos(1) - tab1PanPos(3);
    yMarg = pos(2) - resultTblPos(2) - resultTblPos(4);
    % convert tab1Pan/resultTbl units back to normalized
    handles.tab1Pan.Units = 'normalized';
    handles.resultTbl.Units = 'normalized';

    % apply margins to adjust the frame
    % MAKE SURE THE DIMENSIONS DO NOT EXCEED THE DIMENSIONS OF THE FIGURE
    rect = [-xMarg, -yMarg, pos(3)+1.5*xMarg, pos(4)+1.5*yMarg];

    % get the frame of whatever is currently displayed on the plot
    F = getframe(gca,rect);

    % convert units back to normalized
    ax.Units = 'normalized';

    % create an invisible figure
    figure('Visible','off');

    % add frame to the figure
    imshow(F.cdata);

    % save plot to jpeg
    saveas(gcf,'add_plot.jpeg');
   
    % close figure
    close;
    
    % get userdata containing the current excel file
    curExcel = data.UserData.curExcelFile;
    
    % add image to excel
    img2xlsx({'add_plot.jpeg'},curExcel,pwd,'Add');

    
%%% toolbar button callbacks 

function openBtnCallback(hObject,callbackdata)
    cancel_pushed = 0;
    [txtFileName,path,cancel_in] = uigetfile(...
        {'*.txt','Text-files (*.txt)'},...
        'Select the Signal File for Analysis');

    if cancel_in == 0
        cancel_pushed = 1;
        return
    end

    % add together path & filename
    txtFileName = strcat(path,txtFileName);

    % open file
    fid = fopen(txtFileName);

    % scan file for strings
    data = textscan(fid,'%s');

    % data includes the the whole file as a string .
    % data(1,1) is 'Sensor' and data(2,1) is 'Data'
    % so we skip them convert to digit and Eliminate 'Sensor' and 'Data'
    data = data{1}(3:end);
    data = str2double(data);
    
    % apply PREPROCESS function
    %data = PREPROCESS(data);
    
    % add data to plotData properties
    tmp = guidata(hObject);
    tmp.UserData.plotData = data;
    guidata(hObject,tmp);
    % remove above at some point
    curFig = gcf;
    curFig.UserData.plotData = data;
    
%     handles = guihandles;
    
    % get current axes
    ax = gca;
    
    % get axes
%     ax = handles.axes;
    
    % plot data to axes
    plot(ax,data,... % 'LineWidth',3,...
        'DisplayName','Measurement Data');
    xlabel('Time (sec)',...
        'FontSize',14,...
        'FontName','Times New Roman');
    ylabel('Pressure (mmHg)',...
        'FontSize',14,...
        'FontName','Times New Roman');
    title('Measurement Data from Infant',...
        'FontWeight','demi',...
        'FontSize',15,...
        'FontName','Times New Roman');

function saveBtnCallback(hObject,callbackdata)
    handles = guihandles;
    cancel_pushed=0;
    [resultfile,re_path,cancel_out]=uiputfile( ...
        {'*.xls','Excel Files (*.xls)'}, ...
        'Save the Result of Analysis as');
    
    if cancel_out==0
        cancel_pushed=1;
        return
    end
    
    % get guidata (to get UserData.resultData)
    data = guidata(hObject);
    
    data.UserData.curExcelFile = resultfile;
    guidata(hObject,data);
    
    resultfile = strcat(re_path,resultfile);
    
    %formatting infant info for writing to excel
    tmp = {handles.genderEditTxt.String, handles.ageEditTxt.String, handles.feedTypeEditTxt.String, handles.gestationalAgeEditTxt.String};
    infantInfo = {'Gender','Age','Feed Type','Gestational Age'};
    infantInfo = [infantInfo;tmp];
    
    %Putting notes in a cell
    notes = {'Notes'};
    for i = 1:size(handles.notesEditTxt.String,1)
        noteTmp = handles.notesEditTxt.String(i,:);
        notes = [notes; noteTmp];
    end
    
    % save both stored datasets in UserData to 2 sheets of a *.xls
    xlswrite(resultfile,data.UserData.perSuckData,2);
    xlswrite(resultfile,data.UserData.resultData,3,'A4'); 
    
    % save infantInfo to excel sheet 2
    xlswrite(resultfile,infantInfo,1);
    
    % save the notes to excel
    xlswrite(resultfile,notes,1,'A7');
    
    if exist('resultfile','var')
        set(handles.addPlotBtn,'Enable','on');
    end